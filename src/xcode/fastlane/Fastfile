# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# A list of supported languages

ENV["LC_ALL"] = "de_DE"
ENV["LANG"] = "de_DE"

default_platform(:ios)

platform :ios do

  before_all do
    setup_circle_ci
  end

  desc "Update license file"
  lane :update_licenses do
    update_third_party_notice()
  end

  desc "Build project"
  lane :build do
    build_ios_app(
      skip_codesigning: true,
      export_method: "ad-hoc",
      skip_package_ipa: true,
      destination: "platform=iOS Simulator,OS=13.6,name=iPhone 11",
      scheme: "ENA"
    )
  end

  desc "Build project (Community)"
  lane :build_community do
    build_ios_app(
      skip_codesigning: true,
      export_method: "ad-hoc",
      skip_package_ipa: true,
      destination: "platform=iOS Simulator,OS=13.6,name=iPhone 11",
      scheme: "ENACommunity"
    )
  end

  desc "Run tests"
  lane :test do
    # UI Tests
    run_tests(
      scheme: "ENAUITests",
      devices: ["iPhone 11"]
    )

    # Unit Tests
    run_tests(
      scheme: "ENATests",
      devices: ["iPhone 11"]
    )

    swiftlint(
      mode: :lint,
      output_file: "swiftlint.result.json",
      config_file: "ENA/.swiftlint.yml",
      raise_if_swiftlint_error: true,
      reporter: "sonarqube"
    )

    # Gather code coverage
    xcov(
      workspace: "ENA.xcworkspace",
      scheme: "ENATests",
      markdown_report: true,
      html_report: false,
      output_directory: "fastlane/test_output"
    )
  end

  desc "Build and upload for testing"
  lane :betaRelease do
    match(
      type:"appstore",
      readonly: true
    )

    testflight_build_number = latest_testflight_build_number(username:"technical@devside.com",app_identifier:"be.sciensano.coronalertbe")
    
    increment_build_number(
        build_number: testflight_build_number + 1,
        xcodeproj: "ENA/ENA.xcodeproj"
      )

    build_ios_app(
      scheme: "ENA",
      configuration: "Release",
      clean: true
    )
    
    changelog = changelog_from_git_commits()

    upload_to_testflight(
      username: "technical@devside.com",
      skip_waiting_for_build_processing: false, # so we can set changelog
      skip_submission: true,  # only upload
      changelog: changelog
    )
    
    commit_version_bump(xcodeproj: "ENA/ENA.xcodeproj")
    
    add_git_tag
    
    push_to_git_remote
  end
  
  lane :screenshots do
    capture_screenshots
  end

end
